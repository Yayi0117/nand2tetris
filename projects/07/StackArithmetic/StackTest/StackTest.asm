// translate: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: eq
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_1
D;JEQ
@label_0
D;JNE
(label_0)
@SP
A=M-1
M=0
@endlabel_2
0;JMP
(label_1)
@SP
A=M-1
M=-1
(endlabel_2)
// translate: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: eq
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_4
D;JEQ
@label_3
D;JNE
(label_3)
@SP
A=M-1
M=0
@endlabel_5
0;JMP
(label_4)
@SP
A=M-1
M=-1
(endlabel_5)
// translate: push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: eq
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_7
D;JEQ
@label_6
D;JNE
(label_6)
@SP
A=M-1
M=0
@endlabel_8
0;JMP
(label_7)
@SP
A=M-1
M=-1
(endlabel_8)
// translate: push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: lt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_10
D;JLT
@label_9
D;JGE
(label_9)
@SP
A=M-1
M=0
@endlabel_11
0;JMP
(label_10)
@SP
A=M-1
M=-1
(endlabel_11)
// translate: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: lt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_13
D;JLT
@label_12
D;JGE
(label_12)
@SP
A=M-1
M=0
@endlabel_14
0;JMP
(label_13)
@SP
A=M-1
M=-1
(endlabel_14)
// translate: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: lt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_16
D;JLT
@label_15
D;JGE
(label_15)
@SP
A=M-1
M=0
@endlabel_17
0;JMP
(label_16)
@SP
A=M-1
M=-1
(endlabel_17)
// translate: push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: gt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_19
D;JGT
@label_18
D;JLE
(label_18)
@SP
A=M-1
M=0
@endlabel_20
0;JMP
(label_19)
@SP
A=M-1
M=-1
(endlabel_20)
// translate: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: gt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_22
D;JGT
@label_21
D;JLE
(label_21)
@SP
A=M-1
M=0
@endlabel_23
0;JMP
(label_22)
@SP
A=M-1
M=-1
(endlabel_23)
// translate: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: gt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@label_25
D;JGT
@label_24
D;JLE
(label_24)
@SP
A=M-1
M=0
@endlabel_26
0;JMP
(label_25)
@SP
A=M-1
M=-1
(endlabel_26)
// translate: push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: add
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=M+D
@SP
A=M-1
M=D
// translate: push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: sub
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@SP
A=M-1
M=D
// translate: neg
@SP
A=M-1
M=-M
// translate: and
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=M&D
@SP
A=M-1
M=D
// translate: push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// translate: or
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=M|D
@SP
A=M-1
M=D
// translate: not
@SP
A=M-1
M=!M
